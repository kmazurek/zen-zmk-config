/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"

/* source ZMK helpers */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* activate bluetooth */
#include <dt-bindings/zmk/bt.h>


#define BASE 0
#define SYM 1
#define NUM 2
#define FUN 3
#define SYS 4
#define NO_HRM 5
#define TRANSPARENT 6
#define NOTHING 7

#define XXX &none
#define ___ &trans

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                  // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <250>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <100>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

//MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo
//MAKE_HRM(hmr_lpar_lt, &kp, &lpar_lt, KEYS_L THUMBS)    // "    "   "   "
//MAKE_HRM(hmr_rpar_gt, &kp, &rpar_gt, KEYS_L THUMBS)    // "    "   "   "

/* Thumbs hold-tap */
// tap: key press | hold: switch layer
ZMK_BEHAVIOR(tht, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    require-prior-idle-ms = <100>;
    bindings = <&sl>, <&kp>;
)

#define tht_space &tht SYM SPACE
#define tht_enter &tht NUM ENTER
#define tht_bspc  &tht NUM BSPC

/* Smart shift */

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_BEHAVIOR(smart_shft, mod_morph,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

/* Combos */
#define COMBO_TERM_SLOW 30
#define COMBO_TERM_FAST 25

ZMK_COMBO(tog_no_hrm, &tog NO_HRM, LT5 RT5, ALL, COMBO_TERM_SLOW)
ZMK_COMBO(tog_fun, &tog FUN, LH1 RH1, ALL, COMBO_TERM_SLOW)

/* Vertical combos - left hand */
ZMK_COMBO(excl,  &kp EXCL,      LT4 LM4,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(at,    &kp AT,        LT3 LM3,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(hash,  &kp HASH,      LT2 LM2,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,      LT1 LM1,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,     LT0 LM0,     BASE, COMBO_TERM_SLOW)

ZMK_COMBO(lpar,  &kp LPAR,      LM1 LB1,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(lbkt,  &kp LBKT,      LM2 LB2,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(lbrc,  &kp LBRC,      LM3 LB3,     BASE, COMBO_TERM_SLOW)

/* Vertical combos - right hand */
ZMK_COMBO(caret, &kp CARET,     RT0 RM0,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(amps,  &kp AMPS,      RT1 RM1,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(astrk, &kp ASTRK,     RT2 RM2,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(minus, &kp MINUS,     RT3 RM3,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(plus,  &kp PLUS,      RT4 RM4,     BASE, COMBO_TERM_SLOW)

ZMK_COMBO(rpar,  &kp RPAR,      RM1 RB1,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(rbkt,  &kp RBKT,      RM2 RB2,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(rbrc,  &kp RBRC,      RM3 RB3,     BASE, COMBO_TERM_SLOW)

/* Horizontal combos - left hand */
#define HRC_ESC   &hml LA(LGUI) ESC
ZMK_COMBO(esc,   HRC_ESC,       LM2 LM1,     BASE, COMBO_TERM_FAST)
#define HRC_MINUS &hml LS(LGUI) MINUS
ZMK_COMBO(minus,   HRC_MINUS,     LM3 LM2,     BASE, COMBO_TERM_FAST)

/* Horizontal combos - right hand */
#define HRC_TAB &hmr LA(LGUI) TAB
ZMK_COMBO(tab,   HRC_TAB,       RM1 RM2,     BASE, COMBO_TERM_FAST)
#define HRC_SQT &hmr LS(LCTRL) SQT
ZMK_COMBO(sqt,   HRC_SQT,       RM2 RM3,     BASE, COMBO_TERM_FAST)

ZMK_COMBO(bslh,   &kp BSLH,      RB3 RB4,     BASE, COMBO_TERM_SLOW)
ZMK_COMBO(grave,  &kp GRAVE,     RT3 RT4,     BASE, COMBO_TERM_SLOW)

/* Keymap */

// ZMK_CONDITIONAL_LAYER(SYM NUM, SYS)  // SYM + NUM --> SYS

ZMK_LAYER(base,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T            &kp Y         &kp U         &kp I         &kp O         &kp P         &kp TAB
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp BSPC      &hml LCTRL A  &hml LSHFT S  &hml LGUI D   &hml LALT  F  &kp G            &kp H         &hmr LALT J   &hmr LGUI K   &hmr LSHFT L  &hmr LCTRL SEMI &smart_shft
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           &kp Z         &kp X         &kp C         &kp V         &kp B            &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &kp RALT      &smart_shft   tht_space        tht_enter     &kp BSPC      &kp RALT
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(sym,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___           &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT      &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      &kp GRAVE
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           &kp Z         &kp X         &kp C         &kp V         &kp B            &kp N         &kp UNDER     &kp PLUS      &kp LBRC      &kp RBRC      ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(num,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___           &kp Q         &kp N7        &kp N8        &kp N9        ___              &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           &kp N0        &kp N4        &kp N5        &kp N6        ___              &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           &kp Z         &kp N1        &kp N2        &kp N3        ___              ___           ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(fun,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6           &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(sys,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(no_hrm,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T            &kp Y         &kp U         &kp I         &kp O         &kp P         &kp TAB
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp BSPC      &kp A         &kp S         &kp D         &kp F         &kp G            &kp H         &kp J         &kp K         &kp L         &kp SEMI      &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B            &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp LSHFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &kp RALT      &sl SYM       &kp SPACE        &kp ENTER     &sl NUM       &kp RALT
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(transparent,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(nothing,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     ___           ___           ___           ___           ___           ___              ___           ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               ___           ___           ___              ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
)

/* vim: set ft=c tw=174: */
